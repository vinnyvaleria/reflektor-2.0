generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // this will be updated to postgresql right before deployment
  url      = env("DATABASE_URL")
}

// game session schema -> one session completed = one submission to global leaderboard
model GameSession {
  id                String      @id @default(cuid())
  playerName        String?     // optional name for leaderboard
  gameMode          GameMode    @default(FREEPLAY)
  difficulty        Difficulty? // only used for freeplay mode

  // session timing and limits
  startTime         DateTime    @default(now())
  endTime           DateTime? 
  timeLimit         Int?        // seconds (3 minutes for freeplay)
  status            GameStatus  @default(PLAYING)

  // game progress tracking
  puzzlesCompleted  Int         @default(0) // how many puzzles completed in this session
  totalSteps        Int         @default(0) // total steps taken across all puzzles
  roundsUsed        Int         @default(0) // rounds used (when hitting obstacles)
  score             Int?        // final calculated score

  // current puzzle state (for active sessions)
  currentPuzzle     Json?       // stores current map data
  currentPosition   Json?       // stores player position {row, col, mirroredCol}
  helperUsage       Json        @default("[]") // tracks which helpers were used

  // story mode specific
  storyLevel        Int?         // which story level (1-30)

  createdAt         DateTime    @default(now())

  @@map("game_sessions")
}

// pre-built story mode puzzles (30 levels of 9x9 grids)
model StoryMap {
  id                String      @id @default(cuid())
  level             Int         @unique // 1 to 30
  mapData           Json        // 9x9 grid with obstacles and positions
  name              String      // in case i need in the future lol
  description       String?     // in case i need in the future lol
  targetSteps       Int?        // target steps for 3 stars
  targetTime        Int?        // target time for 3 stars
  createdAt         DateTime    @default(now())

  @@map("story_maps")
}

// different game modes available
enum GameMode {
  FREEPLAY  // time-limited, auto-generated puzzles
  STORY     // 30 pre-built puzzles, progressive difficulty
}

// possible states for a game session
enum GameStatus {
  PLAYING   // currently playing
  COMPLETED // successfully finished
  TIME_UP   // ran out of time (freeplay only)
  PAUSED    // game paused
}

// difficulty levels for freeplay mode
enum Difficulty {
  EASY      // 5x5 grid
  MEDIUM    // 7x7 grid  
  HARD      // 9x9 grid
}
